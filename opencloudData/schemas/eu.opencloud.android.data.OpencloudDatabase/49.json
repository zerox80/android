{
  "formatVersion": 1,
  "database": {
    "version": 49,
    "identityHash": "8ea9a6ea6dcebcc597330e0549ea4900",
    "entities": [
      {
        "tableName": "app_registry",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`account_name` TEXT NOT NULL, `mime_type` TEXT NOT NULL, `ext` TEXT, `app_providers` TEXT NOT NULL, `name` TEXT, `icon` TEXT, `description` TEXT, `allow_creation` INTEGER, `default_application` TEXT, PRIMARY KEY(`account_name`, `mime_type`))",
        "fields": [
          {
            "fieldPath": "accountName",
            "columnName": "account_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mime_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ext",
            "columnName": "ext",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "appProviders",
            "columnName": "app_providers",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "allowCreation",
            "columnName": "allow_creation",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "defaultApplication",
            "columnName": "default_application",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "account_name",
            "mime_type"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "folder_backup",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`accountName` TEXT NOT NULL, `behavior` TEXT NOT NULL, `sourcePath` TEXT NOT NULL, `uploadPath` TEXT NOT NULL, `wifiOnly` INTEGER NOT NULL, `chargingOnly` INTEGER NOT NULL, `name` TEXT NOT NULL, `lastSyncTimestamp` INTEGER NOT NULL, `spaceId` TEXT, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL)",
        "fields": [
          {
            "fieldPath": "accountName",
            "columnName": "accountName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "behavior",
            "columnName": "behavior",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourcePath",
            "columnName": "sourcePath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uploadPath",
            "columnName": "uploadPath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "wifiOnly",
            "columnName": "wifiOnly",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chargingOnly",
            "columnName": "chargingOnly",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastSyncTimestamp",
            "columnName": "lastSyncTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spaceId",
            "columnName": "spaceId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "capabilities",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`account` TEXT, `version_major` INTEGER NOT NULL, `version_minor` INTEGER NOT NULL, `version_micro` INTEGER NOT NULL, `version_string` TEXT, `version_edition` TEXT, `core_pollinterval` INTEGER NOT NULL, `dav_chunking_version` TEXT NOT NULL, `sharing_api_enabled` INTEGER NOT NULL DEFAULT -1, `sharing_public_enabled` INTEGER NOT NULL DEFAULT -1, `sharing_public_password_enforced` INTEGER NOT NULL DEFAULT -1, `sharing_public_password_enforced_read_only` INTEGER NOT NULL DEFAULT -1, `sharing_public_password_enforced_read_write` INTEGER NOT NULL DEFAULT -1, `sharing_public_password_enforced_public_only` INTEGER NOT NULL DEFAULT -1, `sharing_public_expire_date_enabled` INTEGER NOT NULL DEFAULT -1, `sharing_public_expire_date_days` INTEGER NOT NULL, `sharing_public_expire_date_enforced` INTEGER NOT NULL DEFAULT -1, `sharing_public_upload` INTEGER NOT NULL DEFAULT -1, `sharing_public_multiple` INTEGER NOT NULL DEFAULT -1, `supports_upload_only` INTEGER NOT NULL DEFAULT -1, `sharing_resharing` INTEGER NOT NULL DEFAULT -1, `sharing_federation_outgoing` INTEGER NOT NULL DEFAULT -1, `sharing_federation_incoming` INTEGER NOT NULL DEFAULT -1, `sharing_user_profile_picture` INTEGER NOT NULL DEFAULT -1, `files_bigfilechunking` INTEGER NOT NULL DEFAULT -1, `files_undelete` INTEGER NOT NULL DEFAULT -1, `files_versioning` INTEGER NOT NULL DEFAULT -1, `files_private_links` INTEGER NOT NULL DEFAULT -1, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `app_providers_enabled` INTEGER, `app_providers_version` TEXT, `app_providers_appsUrl` TEXT, `app_providers_openUrl` TEXT, `app_providers_openWebUrl` TEXT, `app_providers_newUrl` TEXT, `tus_support_version` TEXT, `tus_support_resumable` TEXT, `tus_support_extension` TEXT, `tus_support_maxChunkSize` INTEGER, `tus_support_httpMethodOverride` TEXT, `spaces_enabled` INTEGER, `spaces_projects` INTEGER, `spaces_shareJail` INTEGER, `spaces_hasMultiplePersonalSpaces` INTEGER, `password_policy_maxCharacters` INTEGER, `password_policy_minCharacters` INTEGER, `password_policy_minDigits` INTEGER, `password_policy_minLowercaseCharacters` INTEGER, `password_policy_minSpecialCharacters` INTEGER, `password_policy_minUppercaseCharacters` INTEGER)",
        "fields": [
          {
            "fieldPath": "accountName",
            "columnName": "account",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "versionMajor",
            "columnName": "version_major",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "versionMinor",
            "columnName": "version_minor",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "versionMicro",
            "columnName": "version_micro",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "versionString",
            "columnName": "version_string",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "versionEdition",
            "columnName": "version_edition",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "corePollInterval",
            "columnName": "core_pollinterval",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "davChunkingVersion",
            "columnName": "dav_chunking_version",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "filesSharingApiEnabled",
            "columnName": "sharing_api_enabled",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicEnabled",
            "columnName": "sharing_public_enabled",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicPasswordEnforced",
            "columnName": "sharing_public_password_enforced",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicPasswordEnforcedReadOnly",
            "columnName": "sharing_public_password_enforced_read_only",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicPasswordEnforcedReadWrite",
            "columnName": "sharing_public_password_enforced_read_write",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicPasswordEnforcedUploadOnly",
            "columnName": "sharing_public_password_enforced_public_only",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicExpireDateEnabled",
            "columnName": "sharing_public_expire_date_enabled",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicExpireDateDays",
            "columnName": "sharing_public_expire_date_days",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "filesSharingPublicExpireDateEnforced",
            "columnName": "sharing_public_expire_date_enforced",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicUpload",
            "columnName": "sharing_public_upload",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicMultiple",
            "columnName": "sharing_public_multiple",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingPublicSupportsUploadOnly",
            "columnName": "supports_upload_only",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingResharing",
            "columnName": "sharing_resharing",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingFederationOutgoing",
            "columnName": "sharing_federation_outgoing",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingFederationIncoming",
            "columnName": "sharing_federation_incoming",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesSharingUserProfilePicture",
            "columnName": "sharing_user_profile_picture",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesBigFileChunking",
            "columnName": "files_bigfilechunking",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesUndelete",
            "columnName": "files_undelete",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesVersioning",
            "columnName": "files_versioning",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "filesPrivateLinks",
            "columnName": "files_private_links",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-1"
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "appProviders.enabled",
            "columnName": "app_providers_enabled",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "appProviders.version",
            "columnName": "app_providers_version",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "appProviders.appsUrl",
            "columnName": "app_providers_appsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "appProviders.openUrl",
            "columnName": "app_providers_openUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "appProviders.openWebUrl",
            "columnName": "app_providers_openWebUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "appProviders.newUrl",
            "columnName": "app_providers_newUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tusSupport.version",
            "columnName": "tus_support_version",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tusSupport.resumable",
            "columnName": "tus_support_resumable",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tusSupport.extension",
            "columnName": "tus_support_extension",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tusSupport.maxChunkSize",
            "columnName": "tus_support_maxChunkSize",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "tusSupport.httpMethodOverride",
            "columnName": "tus_support_httpMethodOverride",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "spaces.enabled",
            "columnName": "spaces_enabled",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "spaces.projects",
            "columnName": "spaces_projects",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "spaces.shareJail",
            "columnName": "spaces_shareJail",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "spaces.hasMultiplePersonalSpaces",
            "columnName": "spaces_hasMultiplePersonalSpaces",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "passwordPolicy.maxCharacters",
            "columnName": "password_policy_maxCharacters",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "passwordPolicy.minCharacters",
            "columnName": "password_policy_minCharacters",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "passwordPolicy.minDigits",
            "columnName": "password_policy_minDigits",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "passwordPolicy.minLowercaseCharacters",
            "columnName": "password_policy_minLowercaseCharacters",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "passwordPolicy.minSpecialCharacters",
            "columnName": "password_policy_minSpecialCharacters",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "passwordPolicy.minUppercaseCharacters",
            "columnName": "password_policy_minUppercaseCharacters",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "files",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`parentId` INTEGER, `owner` TEXT NOT NULL, `remotePath` TEXT NOT NULL, `remoteId` TEXT, `length` INTEGER NOT NULL, `creationTimestamp` INTEGER, `modificationTimestamp` INTEGER NOT NULL, `mimeType` TEXT NOT NULL, `etag` TEXT, `permissions` TEXT, `privateLink` TEXT, `storagePath` TEXT, `name` TEXT, `treeEtag` TEXT, `keepInSync` INTEGER, `lastSyncDateForData` INTEGER, `lastUsage` INTEGER, `fileShareViaLink` INTEGER, `needsToUpdateThumbnail` INTEGER NOT NULL, `modifiedAtLastSyncForData` INTEGER, `etagInConflict` TEXT, `fileIsDownloading` INTEGER, `sharedWithSharee` INTEGER, `sharedByLink` INTEGER NOT NULL, `spaceId` TEXT, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`owner`, `spaceId`) REFERENCES `spaces`(`account_name`, `space_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "owner",
            "columnName": "owner",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "remotePath",
            "columnName": "remotePath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "remoteId",
            "columnName": "remoteId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "length",
            "columnName": "length",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creationTimestamp",
            "columnName": "creationTimestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "modificationTimestamp",
            "columnName": "modificationTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mimeType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "etag",
            "columnName": "etag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "privateLink",
            "columnName": "privateLink",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "storagePath",
            "columnName": "storagePath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treeEtag",
            "columnName": "treeEtag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "availableOfflineStatus",
            "columnName": "keepInSync",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastSyncDateForData",
            "columnName": "lastSyncDateForData",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastUsage",
            "columnName": "lastUsage",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "fileShareViaLink",
            "columnName": "fileShareViaLink",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "needsToUpdateThumbnail",
            "columnName": "needsToUpdateThumbnail",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "modifiedAtLastSyncForData",
            "columnName": "modifiedAtLastSyncForData",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "etagInConflict",
            "columnName": "etagInConflict",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileIsDownloading",
            "columnName": "fileIsDownloading",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "sharedWithSharee",
            "columnName": "sharedWithSharee",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "sharedByLink",
            "columnName": "sharedByLink",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spaceId",
            "columnName": "spaceId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "spaces",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "owner",
              "spaceId"
            ],
            "referencedColumns": [
              "account_name",
              "space_id"
            ]
          }
        ]
      },
      {
        "tableName": "files_sync",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`fileId` INTEGER NOT NULL, `uploadWorkerUuid` BLOB, `downloadWorkerUuid` BLOB, `isSynchronizing` INTEGER NOT NULL, PRIMARY KEY(`fileId`), FOREIGN KEY(`fileId`) REFERENCES `files`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "fileId",
            "columnName": "fileId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uploadWorkerUuid",
            "columnName": "uploadWorkerUuid",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "downloadWorkerUuid",
            "columnName": "downloadWorkerUuid",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "isSynchronizing",
            "columnName": "isSynchronizing",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "fileId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "files",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "fileId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ocshares",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`share_type` INTEGER NOT NULL, `share_with` TEXT, `path` TEXT NOT NULL, `permissions` INTEGER NOT NULL, `shared_date` INTEGER NOT NULL, `expiration_date` INTEGER NOT NULL, `token` TEXT, `shared_with_display_name` TEXT, `share_with_additional_info` TEXT, `is_directory` INTEGER NOT NULL, `id_remote_shared` TEXT NOT NULL, `owner_share` TEXT NOT NULL, `name` TEXT, `url` TEXT, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL)",
        "fields": [
          {
            "fieldPath": "shareType",
            "columnName": "share_type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shareWith",
            "columnName": "share_with",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sharedDate",
            "columnName": "shared_date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expirationDate",
            "columnName": "expiration_date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "token",
            "columnName": "token",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sharedWithDisplayName",
            "columnName": "shared_with_display_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sharedWithAdditionalInfo",
            "columnName": "share_with_additional_info",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isFolder",
            "columnName": "is_directory",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "remoteId",
            "columnName": "id_remote_shared",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accountOwner",
            "columnName": "owner_share",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "shareLink",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "transfers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`localPath` TEXT NOT NULL, `remotePath` TEXT NOT NULL, `accountName` TEXT NOT NULL, `fileSize` INTEGER NOT NULL, `status` INTEGER NOT NULL, `localBehaviour` INTEGER NOT NULL, `forceOverwrite` INTEGER NOT NULL, `transferEndTimestamp` INTEGER, `lastResult` INTEGER, `createdBy` INTEGER NOT NULL, `transferId` TEXT, `spaceId` TEXT, `sourcePath` TEXT, `tusUploadUrl` TEXT, `tusUploadOffset` INTEGER, `tusUploadLength` INTEGER, `tusUploadMetadata` TEXT, `tusUploadChecksum` TEXT, `tusResumableVersion` TEXT, `tusUploadExpires` INTEGER, `tusUploadConcat` TEXT, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL)",
        "fields": [
          {
            "fieldPath": "localPath",
            "columnName": "localPath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "remotePath",
            "columnName": "remotePath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accountName",
            "columnName": "accountName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fileSize",
            "columnName": "fileSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "localBehaviour",
            "columnName": "localBehaviour",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "forceOverwrite",
            "columnName": "forceOverwrite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transferEndTimestamp",
            "columnName": "transferEndTimestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastResult",
            "columnName": "lastResult",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdBy",
            "columnName": "createdBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transferId",
            "columnName": "transferId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "spaceId",
            "columnName": "spaceId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sourcePath",
            "columnName": "sourcePath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tusUploadUrl",
            "columnName": "tusUploadUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tusUploadOffset",
            "columnName": "tusUploadOffset",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "tusUploadLength",
            "columnName": "tusUploadLength",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "tusUploadMetadata",
            "columnName": "tusUploadMetadata",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tusUploadChecksum",
            "columnName": "tusUploadChecksum",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tusResumableVersion",
            "columnName": "tusResumableVersion",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tusUploadExpires",
            "columnName": "tusUploadExpires",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "tusUploadConcat",
            "columnName": "tusUploadConcat",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "spaces",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`account_name` TEXT NOT NULL, `drive_alias` TEXT, `drive_type` TEXT NOT NULL, `space_id` TEXT NOT NULL, `last_modified_date_time` TEXT, `name` TEXT NOT NULL, `owner_id` TEXT, `web_url` TEXT, `description` TEXT, `quota_remaining` INTEGER, `quota_state` TEXT, `quota_total` INTEGER, `quota_used` INTEGER, `root_etag` TEXT, `root_id` TEXT NOT NULL, `root_web_dav_url` TEXT NOT NULL, `root_deleted_state` TEXT, PRIMARY KEY(`account_name`, `space_id`))",
        "fields": [
          {
            "fieldPath": "accountName",
            "columnName": "account_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "driveAlias",
            "columnName": "drive_alias",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "driveType",
            "columnName": "drive_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "space_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastModifiedDateTime",
            "columnName": "last_modified_date_time",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ownerId",
            "columnName": "owner_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "webUrl",
            "columnName": "web_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "quota.remaining",
            "columnName": "quota_remaining",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "quota.state",
            "columnName": "quota_state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "quota.total",
            "columnName": "quota_total",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "quota.used",
            "columnName": "quota_used",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "root.eTag",
            "columnName": "root_etag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "root.id",
            "columnName": "root_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "root.webDavUrl",
            "columnName": "root_web_dav_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "root.deleteState",
            "columnName": "root_deleted_state",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "account_name",
            "space_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "spaces_special",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`spaces_special_account_name` TEXT NOT NULL, `spaces_special_space_id` TEXT NOT NULL, `spaces_special_etag` TEXT NOT NULL, `file_mime_type` TEXT NOT NULL, `special_id` TEXT NOT NULL, `last_modified_date_time` TEXT, `name` TEXT NOT NULL, `size` INTEGER NOT NULL, `special_folder_name` TEXT NOT NULL, `special_web_dav_url` TEXT NOT NULL, PRIMARY KEY(`spaces_special_space_id`, `special_id`), FOREIGN KEY(`spaces_special_account_name`, `spaces_special_space_id`) REFERENCES `spaces`(`account_name`, `space_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "accountName",
            "columnName": "spaces_special_account_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "spaceId",
            "columnName": "spaces_special_space_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eTag",
            "columnName": "spaces_special_etag",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fileMimeType",
            "columnName": "file_mime_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "special_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastModifiedDateTime",
            "columnName": "last_modified_date_time",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "specialFolderName",
            "columnName": "special_folder_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "webDavUrl",
            "columnName": "special_web_dav_url",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "spaces_special_space_id",
            "special_id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "spaces",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "spaces_special_account_name",
              "spaces_special_space_id"
            ],
            "referencedColumns": [
              "account_name",
              "space_id"
            ]
          }
        ]
      },
      {
        "tableName": "user_quotas",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`accountName` TEXT NOT NULL, `used` INTEGER NOT NULL, `available` INTEGER NOT NULL, `total` INTEGER, `state` TEXT, PRIMARY KEY(`accountName`))",
        "fields": [
          {
            "fieldPath": "accountName",
            "columnName": "accountName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "used",
            "columnName": "used",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "available",
            "columnName": "available",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "total",
            "columnName": "total",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "accountName"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '8ea9a6ea6dcebcc597330e0549ea4900')"
    ]
  }
}